# ============================================================================
# BugSpotter - Docker Environment Configuration
# ============================================================================
# Copy this file to .env and update with your values
# ============================================================================

# ============================================================================
# PostgreSQL Configuration
# ============================================================================
POSTGRES_DB=bugspotter
POSTGRES_USER=bugspotter
POSTGRES_PASSWORD=bugspotter_dev_password
POSTGRES_PORT=5432

# Database Pool Settings
DB_POOL_MIN=2
DB_POOL_MAX=10

# ============================================================================
# Redis Configuration
# ============================================================================
REDIS_PORT=6379

# ============================================================================
# MinIO Configuration (S3-Compatible Storage)
# ============================================================================
# Note: Credentials must be 16+ characters (access key) and 32+ characters (secret key)
MINIO_ROOT_USER=minioadmin123456
MINIO_ROOT_PASSWORD=minioadmin12345678901234567890123456
MINIO_BUCKET=bugspotter
MINIO_PORT=9000
MINIO_CONSOLE_PORT=9001

# Storage Backend (minio, s3, r2, or local)
STORAGE_BACKEND=minio
# Note: S3_ACCESS_KEY and S3_SECRET_KEY should match MINIO_ROOT_USER and MINIO_ROOT_PASSWORD
S3_ENDPOINT=http://minio:9000
S3_ACCESS_KEY=minioadmin123456
S3_SECRET_KEY=minioadmin12345678901234567890123456
S3_BUCKET=bugspotter
S3_REGION=us-east-1
S3_FORCE_PATH_STYLE=true

# ============================================================================
# API Server Configuration
# ============================================================================
API_PORT=3000
ADMIN_PORT=3001
# Use 'development' for local Docker testing, 'production' for deployment
NODE_ENV=development
LOG_LEVEL=debug

# ============================================================================
# Security Configuration
# ============================================================================
# CRITICAL: Generate secure random keys for production!
# Generate JWT secret: openssl rand -base64 32
# Generate encryption key: openssl rand -base64 32

# Example values below - DO NOT use in production, generate your own!
JWT_SECRET=EXAMPLE_dev_jwt_key_a1b2c3d4e5f6g7h8i9j0k1l2m3n4o5p6
ENCRYPTION_KEY=EXAMPLE_dev_enc_key_x9y8z7w6v5u4t3s2r1q0p9o8n7m6l5k4

# JWT Token Expiration
JWT_EXPIRES_IN=24h
JWT_REFRESH_EXPIRES_IN=7d

# ============================================================================
# CORS Configuration
# ============================================================================
# Comma-separated list of allowed origins
CORS_ORIGINS=http://localhost:3000,http://localhost:5173

# ============================================================================
# Retention Policy Configuration
# ============================================================================
# How long to keep different types of data (in days)
DEFAULT_RETENTION_DAYS=90
SCREENSHOT_RETENTION_DAYS=60
REPLAY_RETENTION_DAYS=30
ATTACHMENT_RETENTION_DAYS=90
ARCHIVED_RETENTION_DAYS=365

# Compliance region: none, eu, us, kz, uk, ca
COMPLIANCE_REGION=none

# Retention scheduler (runs cleanup jobs)
RETENTION_SCHEDULER_ENABLED=true
RETENTION_CRON_SCHEDULE="0 2 * * *"
RETENTION_CRON_TIMEZONE="UTC"

# ============================================================================
# Worker Configuration
# ============================================================================
# Enable/disable specific workers
WORKER_SCREENSHOT_ENABLED=true
WORKER_REPLAY_ENABLED=true
WORKER_INTEGRATION_ENABLED=true
WORKER_NOTIFICATION_ENABLED=true

# Worker concurrency (number of parallel jobs per worker)
WORKER_SCREENSHOT_CONCURRENCY=5
WORKER_REPLAY_CONCURRENCY=3
WORKER_INTEGRATION_CONCURRENCY=10
WORKER_NOTIFICATION_CONCURRENCY=5

# ============================================================================
# Job Configuration
# ============================================================================
JOB_RETENTION_DAYS=7
MAX_JOB_RETRIES=3
BACKOFF_DELAY=5000
JOB_TIMEOUT=300000

# ============================================================================
# Processing Configuration
# ============================================================================
REPLAY_CHUNK_DURATION=30
MAX_REPLAY_SIZE_MB=100
THUMBNAIL_WIDTH=320
THUMBNAIL_HEIGHT=240
SCREENSHOT_QUALITY=85

# ============================================================================
# Optional: Jira Integration
# ============================================================================
# Leave empty to configure per-project via API
# JIRA_HOST=https://yourcompany.atlassian.net
# JIRA_EMAIL=your-email@company.com
# JIRA_API_TOKEN=your-jira-api-token
# JIRA_PROJECT_KEY=BUG
# JIRA_ISSUE_TYPE=Bug

# ============================================================================
# Development Mode Settings
# ============================================================================
# NOTE: NODE_ENV and LOG_LEVEL are set above in "API Server Configuration"
# Change them there for development or production mode

# ============================================================================
# Production Checklist
# ============================================================================
# Before deploying to production:
# 1. ✓ Change JWT_SECRET to a secure random value
# 2. ✓ Change ENCRYPTION_KEY to a secure random value
# 3. ✓ Change POSTGRES_PASSWORD to a strong password
# 4. ✓ Change MINIO_ROOT_USER and MINIO_ROOT_PASSWORD
# 5. ✓ Update CORS_ORIGINS to your frontend domain(s)
# 6. ✓ Set NODE_ENV=production
# 7. ✓ Review retention policies for your use case
# 8. ✓ Configure proper backup strategy for volumes
# ============================================================================
